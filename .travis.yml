notifications:
  email: false

env:
  global:
  - TERM=dumb
  - secure: FQA/NOw2ZHDMSVfu0Xi1uCuIbuJX/O8mYCfu2T5galFEK8dpVSdPEn7WBV1w1eYHcPzqLaYueHznaOmGpkbzweap21u1nfcSYytCnW2xXpBYe23yLmK7MRepFY5tr1v9um8p0SPdULe09KHekuNr48+Xd3VogOveocgTjqUY4WYaelux8eKxbPeWy2NArNyzVScbrck/yTkyr9OtndBFm739zL4d0GYAqm1P9mELRkNL181cG2dNxpdQmh11DhMZcXsHFBIHEu+YYQuvQorDmH8Keor5Yvs3qruIFGvn5qTdXsNR6SqGaxO+jRJllhdk41ETmW0RWb8vpk0ROIY7Jmk8VV9Z/5GowiAaiCeoOZQ6gQuER7k6pvBvlKpducWJeLeqlHTjD1wqGBcW7W/mPxn1qPzyyXht23k69pjsHCV/VMU4XaY2M74UvnBzGlADVUfuE8q7v+eUGxpmkBlcWaBDWHfJFonHOJz4qVl8olzWV+BnFdFbT3wzMZ0nXut94rQZyobyIE31kPqp2zRLFpVedJRzUzwNKLiddPiqZ/CvlrhvhvR7sE5kFl7dwIIZfKXi1BErR+g3cWPO6B0ay0tFi5jJK7s85LKdjg17G04+NdK90MZ+e3CWQxTVNa8R3uGg72+4aQKABFIMgSn+rQ4ggXFsBikVJTfKVKb9xH8=

language: java
jdk:
- oraclejdk8
#- oraclejdk10

service:
- docker

addons:
  apt:
    update: true
    sources:
    - google-chrome
    packages:
    - google-chrome-stable
    - google-chrome-stable
    - libappindicator1
    - fonts-liberation
    - bash
    - curl
    - libxml2-utils
    - docker-ce

install: true
before_install:
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
#
- sudo add-apt-repository universe -y >/dev/null
- echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends
  tree jq python-pip curl bash sudo >/dev/null
#
- sudo pip install docker-compose httpie >/dev/null 2>&1
#
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 8080 3000 80 >/dev/null
#
- curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - >/dev/null
- echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends yarn >/dev/null

script:
- export root=$(pwd)
#
- bash gradlew >/dev/null
- java -jar ./build/libs/*.jar &
- wait_for 8080
- http :8080
- stop_any 8080 80
#
- bash ./build/libs/*.jar &
- wait_for 8080
- http :8080
- stop_any 8080 80
#
- bash gradlew composeUp
- http :8080
- bash gradlew composeDown
#
- bash mvnw >/dev/null
- java -jar ./target/*.jar &
- wait_for 8080
- http :8080
- stop_any 8080 80
#
- bash ./target/*.jar &
- wait_for 8080
- http :8080
- stop_any 8080 80
#
- bash mvnw docker-compose:up -P docker
- sleep 20
- http :8080
- bash mvnw docker-compose:down -P docker

before_deploy:
- cd ${root}
- ./mvnw -Pdocs
- mkdir -p ./target/generated-docs
- cp -Rf ./target/generated-docs/index.html ./target/generated-docs/404.html

deploy:
  provider: pages
  skip-cleanup: true
  # travis encrypt GITHUB_TOKEN=<your github repo token> --add
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  on:
    branch: master
  local-dir: target/generated-docs
  target_branch: gh-pages

before_cache:
- for item in $(find ~/.gradle -name "*.lock");
    do sudo rm -rf $item ;
  done

cache:
  directories:
  - $HOME/.m2
  - $HOME/.gradle
  - $HOME/.docker
